{"version":3,"file":"component---src-pages-index-tsx-30cbec4d56722f7a1a1d.js","mappings":"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","sources":["webpack://TechBlogProject_T/./src/components/Main/ProfileImage.tsx","webpack://TechBlogProject_T/./src/components/Main/Introduction.tsx","webpack://TechBlogProject_T/./src/components/Main/CategoryList.tsx","webpack://TechBlogProject_T/./src/components/Main/PostItem.tsx","webpack://TechBlogProject_T/./src/hooks/useInfiniteScroll.tsx","webpack://TechBlogProject_T/./src/components/Main/PostList.tsx","webpack://TechBlogProject_T/./node_modules/decode-uri-component/index.js","webpack://TechBlogProject_T/./node_modules/split-on-first/index.js","webpack://TechBlogProject_T/./node_modules/filter-obj/index.js","webpack://TechBlogProject_T/./node_modules/query-string/base.js","webpack://TechBlogProject_T/./node_modules/query-string/index.js","webpack://TechBlogProject_T/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\n\r\nexport type ProfileImageProps = {\r\n    profileImage: IGatsbyImageData;\r\n}\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage) `\r\n    width: 120px;\r\n    height: 120px;\r\n    margin-bottom: 30px;\r\n    border-radius: 50%;\r\n    \r\n    @media (max-width: 768px) {\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n`\r\n\r\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\r\n    profileImage,\r\n}) {\r\n    return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\r\n}\r\n\r\nexport default ProfileImage\r\n\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from '@emotion/styled';\r\nimport ProfileImage from './ProfileImage';\r\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\r\n\r\nexport type IntroductionProps = {\r\n    profileImage: IGatsbyImageData;\r\n};\r\n\r\nconst Background = styled.div`\r\n    width: 100%;\r\n    background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\r\n    color: #ffffff;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    width: 768px;\r\n    height: 400px;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        height: 300px;\r\n        padding: 0 20px;\r\n    }\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 15px;\r\n    }\r\n`\r\n\r\nconst Title = styled.div`\r\n    margin-top: 5px;\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    \r\n    @media (max-width: 768px) {\r\n        font-size: 25px;\r\n    }\r\n`\r\n\r\nconst Introduction: FunctionComponent<IntroductionProps> = function ({ profileImage }) {\r\n    return (\r\n        <Background>\r\n            <Wrapper>\r\n                <ProfileImage profileImage={profileImage}/>\r\n                <div>\r\n                    <SubTitle>Nice to Meet you,</SubTitle>\r\n                    <Title>I'm a Data scientist, Aquinaso.</Title>\r\n                </div>\r\n            </Wrapper>\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default Introduction;\r\n","import React, { FunctionComponent, ReactNode } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\ntype CategoryItemProps = {\r\n    active: boolean;\r\n}\r\n\r\ntype GatsbyLinkProps = {\r\n    children: ReactNode;\r\n    className?: string;\r\n    to: string;\r\n} & CategoryItemProps\r\n\r\nexport type CategoryListProps = {\r\n    selectedCategory: string\r\n    CategoryList: {\r\n        //프로퍼티 이름은 문자열, 프로퍼티 값은 숫자임을 나타내는 타입 표기 방법\r\n        [key: string]: number\r\n    }\r\n}\r\n\r\nconst CategoryListWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 768px;\r\n    margin: 100px auto 0;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        margin-top: 50px;\r\n        padding: 0 20px;\r\n    }\r\n`\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst CategoryItem = styled(({ active, ...props}: GatsbyLinkProps) => (\r\n    <Link {...props} />\r\n))<CategoryItemProps>`\r\n    margin-right: 20px;\r\n    padding: 5px 0;\r\n    font-size: 18px;\r\n    font-weight: ${({ active }) => (active ? '800' : '400')};\r\n    cursor: pointer;\r\n\r\n    &: last-of-type{\r\n        margin-right: 0;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 15px;\r\n    }\r\n`\r\n\r\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\r\n    selectedCategory,\r\n    CategoryList,\r\n}) {\r\n    return (\r\n        <CategoryListWrapper>\r\n            {Object.entries(CategoryList).map(([name, count]) => (\r\n                <CategoryItem\r\n                to={`/?category=${name}`}\r\n                active={name === selectedCategory}\r\n                key={name}\r\n                >\r\n                #{name}({count})\r\n                </CategoryItem>\r\n            ))}\r\n        </CategoryListWrapper>\r\n    )\r\n}\r\n\r\nexport default CategoryList","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\n\r\nexport type PostFrontmatterType = {\r\n    title: string\r\n    date: string\r\n    categories: string[]\r\n    summary: string\r\n    thumbnail: {\r\n        childImageSharp: {\r\n            gatsbyImageData: IGatsbyImageData\r\n        }\r\n    }\r\n}\r\n\r\nexport type PostListItemType = {\r\n    node: {\r\n        id: string\r\n        frontmatter: PostFrontmatterType\r\n    }\r\n}\r\n\r\ntype postItemProps = PostFrontmatterType & { link: string }\r\n\r\nconst PostItemWrapper = styled(Link)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\r\n    transition: 0.3s box-shadow;\r\n    cursor: pointer;\r\n\r\n    &: hover{\r\n        box-shadow: 0 0 10px rgba(0, 0, 0m 0.3);\r\n    }\r\n`\r\n\r\nconst ThumnailImage = styled(GatsbyImage)`\r\n    width: 100%\r\n    height: 200px;\r\n    border-radius: 10px 10px 0 0;\r\n`\r\n\r\nconst PostItemContent = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 15px;\r\n`\r\n\r\nconst Title = styled.div`\r\n    display: -webkit-box;\r\n    overflow: hidden;\r\n    margin-bottom: 3px;\r\n    text-overflow: ellipsis;\r\n    white-space: normal;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n`\r\n\r\nconst Date = styled.div`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst Category = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 10px;\r\n    margin: 10px -5px;\r\n`\r\n\r\nconst CategoryItem =  styled.div`\r\n    margin: 2.5px 5px;\r\n    padding: 3px 5px;\r\n    border-radius: 3px;\r\n    background: black;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    color: white;\r\n`\r\n\r\nconst Summary = styled.div`\r\n    display: -webkit-box;\r\n    overflow: hidden;\r\n    margin-top: auto;\r\n    text-overflow: ellipsis;\r\n    white-space: normal;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    font-size: 16px;\r\n    opacity: 0.8\r\n`\r\n\r\nconst PostItem: FunctionComponent<postItemProps> = function ({\r\n    title,\r\n    date,\r\n    categories,\r\n    summary,\r\n    thumbnail: {\r\n        childImageSharp: { gatsbyImageData },\r\n    },\r\n    link,\r\n}) {\r\n    return (\r\n    <PostItemWrapper to={link}>\r\n        <ThumnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\r\n        \r\n        <PostItemContent>\r\n            <Title>{title}</Title>\r\n            <Date>{date}</Date>\r\n            <Category>\r\n                {categories.map(item => (\r\n                    <CategoryItem key={item}>{item}</CategoryItem>\r\n                ))}\r\n            </Category>\r\n            <Summary>{summary}</Summary>\r\n        </PostItemContent>\r\n    </PostItemWrapper>)\r\n}\r\n\r\nexport default PostItem","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n\r\nexport type useInfiniteScrollType = {\r\n    containerRef: MutableRefObject<HTMLDivElement | null>\r\n    postList: PostListItemType[]\r\n}\r\n\r\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\r\n\r\nconst useInfiniteScroll = function (\r\n    selectedCategory: string,\r\n    posts: PostListItemType[],\r\n): useInfiniteScrollType {\r\n    const containerRef: MutableRefObject<HTMLDivElement | null> = useRef<HTMLDivElement>(\r\n        null,\r\n    )\r\n    const [count, setCount] = useState<number>(1)\r\n\r\n    const postListByCategory = useMemo<PostListItemType[]>(\r\n        () =>\r\n        posts.filter(({ node: { frontmatter: { categories } } }: PostListItemType) =>\r\n        selectedCategory !== 'All'\r\n            ? categories.includes(selectedCategory)\r\n            : true,\r\n        ),\r\n    [selectedCategory],\r\n    )\r\n    const observer: IntersectionObserver = new IntersectionObserver(\r\n        (entries, observer) => {\r\n            if (!entries[0].isIntersecting) return;\r\n            \r\n            setCount(value => value + 1);\r\n            observer.disconnect();\r\n        },\r\n    )\r\n\r\n    // Reset count when selectedCategory changes\r\n    useEffect(() => setCount(1), [selectedCategory])\r\n\r\n    useEffect(() => {\r\n        // Check if there are more items to load\r\n        if (\r\n            NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\r\n            containerRef.current === null ||\r\n            containerRef.current.children.length === 0\r\n        )\r\n        return\r\n\r\n        // Observe the last child element for infinite scroll\r\n        observer.observe(\r\n            containerRef.current.children[containerRef.current.children.length - 1],\r\n        )\r\n    }, [count, selectedCategory])\r\n\r\n    return { \r\n        containerRef,\r\n        postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\r\n    }\r\n}\r\n\r\nexport default useInfiniteScroll","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PostItem from 'components/Main/PostItem'\r\nimport useInfiniteScroll, { useInfiniteScrollType, } from 'hooks/useInfiniteScroll'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n\r\nexport type PostType = {\r\n    node: {\r\n        id: string\r\n        frontmatter: {\r\n          title: string\r\n          summary: string\r\n          date: string\r\n          categories: string[]\r\n          thumbnail: {\r\n            publicURL: string\r\n          }\r\n        }\r\n      }\r\n}\r\n\r\ntype PostListProps = {\r\n    selectedCategory: string\r\n    posts: PostListItemType[]\r\n}\r\n\r\n\r\n\r\nconst PostListWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 20px;\r\n    width: 668px;\r\n    margin: 0 auto;\r\n    padding: 50px 0 100px;\r\n\r\n    @media (max-width: 768px) {\r\n        grid-template-columns: 1fr;\r\n        width: 100%\r\n        padding: 50px 20px;\r\n    }\r\n`\r\n\r\nconst PostList: FunctionComponent<PostListProps> = function ({ \r\n  selectedCategory,\r\n  posts,\r\n}) {\r\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\r\n    selectedCategory,\r\n    posts,\r\n   )\r\n\r\n   return (\r\n    <PostListWrapper ref={containerRef}>\r\n      {postList.map(\r\n        ({\r\n          node: { \r\n            id,\r\n            fields: { slug },\r\n            frontmatter\r\n          },\r\n        }: PostListItemType) => (\r\n          <PostItem {...frontmatter} link={slug} key={id} />\r\n        ),\r\n        )}\r\n    </PostListWrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default PostList","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { FunctionComponent, useMemo } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport GlobalStyle from 'components/Common/GlobalStyle';\r\nimport Introduction from 'components/Main/Introduction';\r\nimport Footer from 'components/Common/Footer';\r\nimport CategoryList from 'components/Main/CategoryList';\r\nimport PostList, { PostType } from 'components/Main/PostList';\r\nimport { graphql } from 'gatsby';\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'; // Import GatsbyImage\r\nimport { PostListItemType } from 'types/PostItem.types';\r\nimport queryString, { ParsedQuery } from 'query-string';\r\nimport Template from 'components/Common/Template'\r\n\r\n\r\ntype IndexPageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[];\r\n    };\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData;\r\n      } | null; // Handle null value for childImageSharp\r\n    };\r\n  };\r\n};\r\n\r\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\r\n  location: { search },\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n    },\r\n  },\r\n}) {\r\n   const parsed: ParsedQuery<string> = queryString.parse(search)\r\n   const selectedCategory: string =\r\n    typeof parsed.category !== 'string' || !parsed.category\r\n    ? 'All'\r\n    : parsed.category\r\n   const categoryList = useMemo(\r\n    () =>\r\n    edges.reduce(\r\n      (\r\n        list: CategoryListProps['categoryList'],\r\n        {\r\n          node: {\r\n            frontmatter: { categories },\r\n          },\r\n        }: PostType,\r\n      ) => {\r\n        categories.forEach(category => {\r\n          if (list[category] === undefined) list[category] = 1;\r\n          else list[category]++;\r\n        });\r\n\r\n        list['All']++;\r\n        \r\n        return list;\r\n      },\r\n      { All: 0 },\r\n    ),\r\n    [],\r\n   )\r\n   return (\r\n    <Template>\r\n      <Introduction profileImage={gatsbyImageData} />\r\n      <CategoryList\r\n      selectedCategory={selectedCategory}\r\n      CategoryList={categoryList}\r\n      />\r\n      <PostList selectedCategory={selectedCategory} posts={edges} />\r\n    </Template>\r\n   );\r\n};\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\n  query getPostList {\r\n    allMarkdownRemark(\r\n      sort: [{frontmatter: {date: DESC}}, {frontmatter: {title: DESC}}]\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: {eq: \"profile-image\"}) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n    }\r\n  }\r\n`"],"names":["ProfileImageWrapper","_styled","GatsbyImage","target","name","styles","profileImage","___EmotionJSX","image","alt","Background","Wrapper","SubTitle","Title","ProfileImage","CategoryListWrapper","CategoryItem","_ref","active","props","Link","_ref2","selectedCategory","CategoryList","Object","entries","map","_ref4","count","to","key","PostItemWrapper","ThumnailImage","PostItemContent","Date","Category","Summary","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","item","posts","containerRef","useRef","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","observer","IntersectionObserver","isIntersecting","value","disconnect","useEffect","length","current","children","observe","postList","slice","PostListWrapper","useInfiniteScroll","ref","id","fields","slug","PostItem","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","strictUriEncode","encodeURIComponent","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","isEncodedArray","newValue","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","location","search","data","allMarkdownRemark","edges","file","parsed","category","categoryList","list","forEach","All","Template","Introduction","PostList"],"sourceRoot":""}